<?php
// $Id: simple_contest_uc_coupon.module,v 1.1 2010/06/28 15:42:05 4vinoth Exp $
/**
 * @file
 * 
 * simple_contest_uc_coupon module
 */
 
/**
 * Implementation of hook_help
 */
function simple_contest_uc_coupon_help($path, $arg) {
  switch ($path) {
    case 'admin/help#simple_contest_uc_coupon':
      $output = '<p>'. t('provides simple contest integration with Ubercart Coupon module') .'</p>';
      return $output;
  }
}

/*
 * Implementation of hook_simple_contest()
 *
 */
function simple_contest_uc_coupon_simple_contest(&$node, $op,  $a3){
	if($op == 'completed' && $a3){
		$winners = $a3;
		$settings = simple_contest_get_settings($node->type);
		//if ($settings['winner_type'] == 'user'){ //
		foreach($new_winners as $uid => $info){
		
			$data = array();
			$data['roles'] = array();
			$data['users'][] = $uid; // only for this user
			$data['terms'] = array();
			$data['skus'] = array();
			$data['products'] = array();
			$data['product_types'] = array();
			$data['negate_terms'] = TRUE;
			$data['negate_products'] = TRUE;
			$data['max_uses_per_user'] = 1;
			$data['wholesale'] = 1;
			
			$cname = 'Coupon uid : ' . $uid . ' contest: ' . $node->nid. ' Date: ' . date('Y') . date('m') . date('d');
			$code = 'CCP' . '_' . $node->nid. '_' . $uid . '_' .  date('Y') . date('m') . date('d');
			$valid_until = mktime(0, 0, 0, date('m'), date('d'), date('Y') + 1);
			
			db_query("INSERT INTO {uc_coupons} (name, code, value, type, status, valid_until, max_uses, minimum_order, data, bulk, bulk_seed) VALUES ('%s', '%s', %f, '%s', %d, %d, %d, %d, '%s', %d, '%s')", $cname, $code, $settings['uc_coupon_values']['value_' . $info->weight], $settings['uc_coupon_type'], 1, $valid_until, 0, 0, serialize($data), 0, md5(uniqid()));
		
		}
	}
}


/**
 * Implementation of hook_form_alter().
 */
function simple_contest_uc_coupon_form_alter(&$form, $form_state, $form_id) {

  if ($form_id == 'simple_contest_content_type_settings_form') {
	
		$type = $form_state['type'];  
		$settings = simple_contest_get_settings($type);
		
		$form['simple_contest']['prize_coupons'] = array(
			'#type' => 'fieldset',
			'#title' => t('Prize Coupons'),
			'#collapsible' => TRUE,
			'#collapsed' => FALSE,
			'#description' => t('Ubercart coupons will be creted for each winners based on the settings below. Enter values without symbols, for 15%, enter "15" and choose Percentage as the discount type.'),
			'#weight' => 5,
		);
		
		$form['simple_contest']['prize_coupons']['uc_coupon_type'] = array(
			'#type' => 'select',
			'#title' => t('Coupon type'),
			'#default_value' => $settings['uc_coupon_type'],
			'#options' => array(
				'percentage' => 'Percentage',
				'price' => 'Price'
			),
		);
		
		$form['simple_contest']['prize_coupons']['uc_coupon_values'] = array(
			'#type' => 'fieldset',
			'#title' => t('Prize Coupons'),
			'#collapsible' => TRUE,
			'#collapsed' => FALSE,
			'#weight' => 5,
			'#tree' => TRUE,
		);
		
		for($count = 1; $count <= $settings['max_winners']; $count++){
			$form['simple_contest']['prize_coupons']['uc_coupon_values']['value_' . $count] = array(
				'#type' => 'textfield',
				'#title' => t('coupon value for winner ' . $count),
				'#size' => 30,
				'#default_value' => $settings['uc_coupon_values']['value_' . $count],
				'#required' => TRUE,
				'#weight' => $count,
			);
		}
		
		$form['#submit'][] = '_simple_contest_uc_coupon_content_type_settings_form_submit';
		$form['#validate'][] = '_simple_contest_uc_coupon_content_type_settings_form_validate';

	}
}

function _simple_contest_uc_coupon_content_type_settings_form_validate($form, &$form_state) {

}

function _simple_contest_uc_coupon_content_type_settings_form_submit($form, &$form_state) {

	//$settings = simple_contest_get_settings($form_state['type']);
	
}

/**
 * Implementation of hook_simple_contest_settings()
 */
function simple_contest_uc_coupon_simple_contest_settings() {
  return array(
		'uc_coupon_values' => array(),
		'uc_coupon_type' => 'price',
  );
	
}
